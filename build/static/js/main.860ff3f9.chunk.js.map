{"version":3,"sources":["component/ErrorBoundary/index.jsx","api/github/repo/index.jsx","api/github/index.jsx","hooks/useScroll.jsx","view/GitHubPublicRepoList/index.jsx","reportWebVitals.js","index.js"],"names":["ErrorBoundary","state","hasError","error","errorInfo","console","log","this","setState","props","children","Component","getSearchRepo","a","queryString","page","url","fetch","GitHubApiUrl","result","json","parsedResult","GitHubApi","Repo","useScroll","callBack","ref","useRef","useEffect","refCur","current","addEventListener","removeEventListener","RepoList","dataList","isLoading","isError","map","item","idx","name","node_id","GitHubPublicRepoList","useState","setQueryString","setPage","end","setEnd","setDataList","setIsLoading","setIsError","fetchData","data","total_count","items","newData","concat","length","delayFetch","useCallback","debounce","cancel","scrollCallback","e","target","scrollHeight","offsetHeight","scrollTop","style","height","overflow","padding","onChange","event","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.860ff3f9.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport class ErrorBoundary extends Component {\r\n\r\n    state = {\r\n        hasError: false,\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(\"Some error happened !!!!!!!\");\r\n        console.log(\"Can call error log api here\");\r\n        console.log(error);\r\n        console.log(errorInfo);\r\n\r\n        this.setState({\r\n            hasError: true,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>OOPS! Something went wrong. Please contact web admin if this keep happenning</h1>;\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import { GitHubApiUrl } from \"..\";\r\n\r\nconst getSearchRepo = async (queryString = '', page = 0) => {\r\n\r\n    let url = `/search/repositories?per_page=50&page=${page}`\r\n    if (queryString) url += `&q=${queryString}`;\r\n\r\n    const result = await fetch(GitHubApiUrl + url);\r\n    const parsedResult = await result.json();\r\n\r\n    return parsedResult;\r\n}\r\n\r\n\r\nconst GitHubRepo = {\r\n    getSearchRepo,\r\n}\r\n\r\nexport default GitHubRepo;","import Repo from './repo';\r\n\r\nexport const GitHubApiUrl = \"https://api.github.com\";\r\n\r\nconst GitHubApi = {\r\n    Repo,\r\n}\r\n\r\nexport default GitHubApi;","import { useRef, useEffect } from \"react\";\r\n\r\nconst useScroll = (callBack) => {\r\n    const ref = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const refCur = ref.current;\r\n\r\n        if (ref.current && callBack) {\r\n            ref.current.addEventListener('scroll', callBack);\r\n        }\r\n\r\n        return () => {\r\n            if (refCur && callBack) {\r\n                refCur.removeEventListener('scroll', callBack);\r\n            }\r\n        };\r\n    }, [ref, callBack]);\r\n\r\n    return ref;\r\n}\r\n\r\nexport default useScroll;","import React, { useEffect, useState, useCallback } from 'react';\r\nimport GitHubApi from \"api/github\";\r\nimport debounce from 'lodash/debounce';\r\nimport useScroll from 'hooks/useScroll';\r\n\r\nconst RepoList = ({ queryString, dataList, isLoading, isError }) => {\r\n    if (!queryString) return <p>Looking for anything?</p>\r\n    if (isError) return <p>OOPS! Server went wrong. Please try it later. Contact web admin if this keep happenning.</p>;\r\n\r\n    return (\r\n        <>\r\n            <ul>\r\n                {dataList.map((item, idx) => (\r\n                    <li key={`repolist-${idx}-${item.node_id}`}>{item.name}</li>\r\n                ))}\r\n            </ul>\r\n            {(isLoading) && <p>Loading...</p>}\r\n        </>\r\n    )\r\n}\r\n\r\nconst GitHubPublicRepoList = (props) => {\r\n\r\n    const [queryString, setQueryString] = useState();\r\n    const [page, setPage] = useState(0);\r\n    const [end, setEnd] = useState(false);\r\n    const [dataList, setDataList] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [isError, setIsError] = useState(false);\r\n\r\n    const fetchData = async () => {\r\n\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            const data = await GitHubApi.Repo.getSearchRepo(queryString, page);\r\n            const { total_count, items } = data;\r\n            const newData = dataList.concat(items);\r\n            if (items.length > 0) setDataList(dataList.concat(items));\r\n            if (newData.length >= total_count) setEnd(true);\r\n        } catch (err) {\r\n            console.log(err);\r\n            setIsError(true)\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    }\r\n\r\n    const delayFetch = useCallback(debounce(fetchData, 500), [queryString, page]);\r\n\r\n    useEffect(() => {\r\n        delayFetch();\r\n        \r\n        return delayFetch.cancel;\r\n    }, [delayFetch])\r\n\r\n    const initState = () => {\r\n        setPage(0);\r\n        setEnd(false);\r\n        setDataList([]);\r\n        setIsError(false);\r\n        setIsLoading(false);\r\n    }\r\n\r\n    const handleInputChange = (event) => {\r\n        setQueryString(event.target.value);\r\n        initState();\r\n    }\r\n\r\n    const scrollCallback = useCallback((e) => {\r\n        const maxScroll = e.target.scrollHeight - e.target.offsetHeight;\r\n        const scrollTop = e.target.scrollTop;\r\n        const difference = maxScroll - scrollTop;\r\n\r\n        if (difference <= 0 && !end && !isLoading) {\r\n            setPage(page + 1);\r\n        }\r\n    }, [end, page, isLoading])\r\n\r\n    const ref = useScroll(scrollCallback);\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                height: '100vh',\r\n                overflow: 'auto',\r\n                padding: '0px 20px'\r\n            }}\r\n            ref={ref}\r\n        >\r\n            <h3>GitHub Repo List</h3>\r\n            <div>\r\n                <input\r\n                    name=\"repo_name\"\r\n                    onChange={handleInputChange}\r\n                />\r\n            </div>\r\n            <RepoList\r\n                queryString={queryString}\r\n                dataList={dataList}\r\n                isLoading={isLoading}\r\n                isError={isError}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GitHubPublicRepoList\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport ErrorBoundary from 'component/ErrorBoundary';\nimport GitHubPublicRepoList from 'view/GitHubPublicRepoList'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ErrorBoundary>\n      <GitHubPublicRepoList />\n    </ErrorBoundary>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}